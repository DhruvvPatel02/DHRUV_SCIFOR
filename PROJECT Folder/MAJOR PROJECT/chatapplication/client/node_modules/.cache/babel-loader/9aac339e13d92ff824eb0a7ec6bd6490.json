{"ast":null,"code":"var _jsxFileName = \"C:\\\\All Project Folder\\\\TEMFOLDER\\\\GITHUB-DHRUV_SCIFOR\\\\PROJECT Folder\\\\MAJOR PROJECT\\\\chatapplication\\\\client\\\\src\\\\app\\\\index.tsx\",\n    _process,\n    _process$env,\n    _s = $RefreshSig$();\n\nimport { useLayoutEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { Join, Chat } from '../views';\nimport { Alert } from '../components';\nimport { darkCSSVariables, lightCSSVariables, overrideThemeVariables } from '../util';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst alert = require('../assets/alert.wav');\n\nconst audio = new Audio(alert.default);\nconst URL = ((_process = process) === null || _process === void 0 ? void 0 : (_process$env = _process.env) === null || _process$env === void 0 ? void 0 : _process$env.REACT_APP_BACKEND_URL) || 'https://spanion-chat-app-service.onrender.com/';\nlet socket = io(URL, {\n  transports: ['websocket']\n});\nlet olderTimestamp;\n\nconst App = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [dark, setDark] = useState(false);\n  const [joined, setJoined] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  useLayoutEffect(() => {\n    socket.on('message', message => {\n      if (message.user !== 'bot') {\n        audio.play();\n      }\n\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on('roomData', ({\n      message,\n      users\n    }) => {\n      setUsers(users);\n\n      if (message) {\n        setAlertMessage(message);\n        setShowAlert(true);\n      }\n    });\n    socket.on('leave', ({\n      error,\n      devMessage\n    }) => {\n      console.error({\n        error,\n        devMessage\n      });\n      reset();\n    });\n    handleTheme(localStorage.getItem('dark') === 'true');\n  }, []);\n\n  const reset = () => {\n    setAlertMessage('');\n    setShowAlert(false);\n    setJoined(false);\n    setMessages([]);\n    setMessage('');\n    setUsers([]);\n    setName('');\n    setRoom('');\n  };\n\n  const handleTheme = value => {\n    localStorage.setItem('dark', String(value));\n    setDark(value);\n    overrideThemeVariables(value ? darkCSSVariables : lightCSSVariables);\n  };\n\n  const sendMessage = event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (message) {\n      const timestamp = new Date().valueOf();\n\n      if (olderTimestamp) {\n        if (Math.abs(olderTimestamp - timestamp) < 750) {\n          setAlertMessage('Please wait a moment before sending again');\n          setShowAlert(true);\n          olderTimestamp = timestamp;\n          return;\n        }\n      }\n\n      olderTimestamp = timestamp;\n      socket.emit('sendMessage', {\n        message,\n        timestamp\n      }, () => setMessage(''));\n    }\n  };\n\n  const onJoin = ({\n    name,\n    room\n  }) => {\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        setAlertMessage(error);\n        setShowAlert(true);\n        return;\n      }\n\n      setJoined(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      dark: dark,\n      show: showAlert,\n      message: alertMessage,\n      onChange: value => setShowAlert(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), joined ? /*#__PURE__*/_jsxDEV(Chat, {\n      dark: dark,\n      name: name,\n      room: room,\n      users: users,\n      message: message,\n      messages: messages,\n      onSend: sendMessage,\n      onTheme: handleTheme,\n      setMessage: setMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Join, {\n      onJoin: onJoin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"QgSVf2j2OcdUAAp2dDJX8pnhzqY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/All Project Folder/TEMFOLDER/GITHUB-DHRUV_SCIFOR/PROJECT Folder/MAJOR PROJECT/chatapplication/client/src/app/index.tsx"],"names":["useLayoutEffect","useState","io","Join","Chat","Alert","darkCSSVariables","lightCSSVariables","overrideThemeVariables","alert","require","audio","Audio","default","URL","process","env","REACT_APP_BACKEND_URL","socket","transports","olderTimestamp","App","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","dark","setDark","joined","setJoined","showAlert","setShowAlert","alertMessage","setAlertMessage","on","user","play","error","devMessage","console","reset","handleTheme","localStorage","getItem","value","setItem","String","sendMessage","event","preventDefault","timestamp","Date","valueOf","Math","abs","emit","onJoin"],"mappings":"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","sourcesContent":["import { useLayoutEffect, useState } from 'react'\r\nimport { io } from 'socket.io-client'\r\n\r\nimport { Join, Chat } from '../views'\r\nimport { Alert } from '../components'\r\nimport {\r\n  darkCSSVariables,\r\n  lightCSSVariables,\r\n  overrideThemeVariables,\r\n} from '../util'\r\n\r\nimport './styles.css'\r\n\r\nconst alert = require('../assets/alert.wav')\r\nconst audio = new Audio(alert.default)\r\n\r\nconst URL =\r\n  process?.env?.REACT_APP_BACKEND_URL ||\r\n  'https://spanion-chat-app-service.onrender.com/'\r\nlet socket = io(URL, { transports: ['websocket'] })\r\n\r\nlet olderTimestamp: any\r\n\r\nconst App = () => {\r\n  const [name, setName] = useState<string>('')\r\n  const [room, setRoom] = useState<string>('')\r\n  const [users, setUsers] = useState<any[]>([])\r\n  const [message, setMessage] = useState<string>('')\r\n  const [messages, setMessages] = useState<string[]>([])\r\n  const [dark, setDark] = useState<boolean>(false)\r\n  const [joined, setJoined] = useState<boolean>(false)\r\n  const [showAlert, setShowAlert] = useState<boolean>(false)\r\n  const [alertMessage, setAlertMessage] = useState<string>('')\r\n\r\n  useLayoutEffect(() => {\r\n    socket.on('message', (message) => {\r\n      if (message.user !== 'bot') {\r\n        audio.play()\r\n      }\r\n\r\n      setMessages((messages) => [...messages, message])\r\n    })\r\n\r\n    socket.on('roomData', ({ message, users }) => {\r\n      setUsers(users)\r\n\r\n      if (message) {\r\n        setAlertMessage(message)\r\n        setShowAlert(true)\r\n      }\r\n    })\r\n\r\n    socket.on('leave', ({ error, devMessage }) => {\r\n      console.error({ error, devMessage })\r\n\r\n      reset()\r\n    })\r\n\r\n    handleTheme(localStorage.getItem('dark') === 'true')\r\n  }, [])\r\n\r\n  const reset = () => {\r\n    setAlertMessage('')\r\n    setShowAlert(false)\r\n    setJoined(false)\r\n    setMessages([])\r\n    setMessage('')\r\n    setUsers([])\r\n    setName('')\r\n    setRoom('')\r\n  }\r\n\r\n  const handleTheme = (value: boolean) => {\r\n    localStorage.setItem('dark', String(value))\r\n\r\n    setDark(value)\r\n\r\n    overrideThemeVariables(value ? darkCSSVariables : lightCSSVariables)\r\n  }\r\n\r\n  const sendMessage = (event: MessageEvent) => {\r\n    if (event) {\r\n      event.preventDefault()\r\n    }\r\n\r\n    if (message) {\r\n      const timestamp = new Date().valueOf()\r\n\r\n      if (olderTimestamp) {\r\n        if (Math.abs(olderTimestamp - timestamp) < 750) {\r\n          setAlertMessage('Please wait a moment before sending again')\r\n          setShowAlert(true)\r\n\r\n          olderTimestamp = timestamp\r\n          return\r\n        }\r\n      }\r\n\r\n      olderTimestamp = timestamp\r\n\r\n      socket.emit('sendMessage', { message, timestamp }, () => setMessage(''))\r\n    }\r\n  }\r\n\r\n  const onJoin = ({ name, room }: any) => {\r\n    setName(name)\r\n    setRoom(room)\r\n\r\n    socket.emit('join', { name, room }, (error: any) => {\r\n      if (error) {\r\n        setAlertMessage(error)\r\n        setShowAlert(true)\r\n\r\n        return\r\n      }\r\n\r\n      setJoined(true)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Alert\r\n        dark={dark}\r\n        show={showAlert}\r\n        message={alertMessage}\r\n        onChange={(value: boolean) => setShowAlert(value)}\r\n      />\r\n      {joined ? (\r\n        <Chat\r\n          dark={dark}\r\n          name={name}\r\n          room={room}\r\n          users={users}\r\n          message={message}\r\n          messages={messages}\r\n          onSend={sendMessage}\r\n          onTheme={handleTheme}\r\n          setMessage={setMessage}\r\n        />\r\n      ) : (\r\n        <Join onJoin={onJoin} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}