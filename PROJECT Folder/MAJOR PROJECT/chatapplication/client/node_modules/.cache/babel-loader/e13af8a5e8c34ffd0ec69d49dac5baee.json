{"ast":null,"code":"var _jsxFileName = \"C:\\\\All Project Folder\\\\TEMFOLDER\\\\GITHUB-DHRUV_SCIFOR\\\\PROJECT Folder\\\\MAJOR PROJECT\\\\chatapplication\\\\client\\\\src\\\\components\\\\messages\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useLayoutEffect, useRef } from 'react';\nimport TextField from '../text-field';\nimport Message from '../message';\nimport './styles.css';\nimport sendIcon from \"../../assets/send.svg\";\nimport sendDarkIcon from \"../../assets/send-dark.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = ({\n  name,\n  dark,\n  onSend,\n  message,\n  messages,\n  setMessage\n}) => {\n  _s();\n\n  const messagesRef = useRef(null);\n  useLayoutEffect(() => {\n    if (messagesRef.current) {\n      const elem = messagesRef.current;\n      elem.scrollTop = elem.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesRef,\n      className: \"messages__container\",\n      children: messages.map(({\n        text,\n        timestamp,\n        user\n      }, index) => /*#__PURE__*/_jsxDEV(Message, {\n        user: user,\n        text: text,\n        name: name,\n        timestamp: timestamp\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: message,\n      onIconClick: () => onSend(),\n      placeholder: \"Type a message here...\",\n      icon: dark ? sendDarkIcon : sendIcon,\n      onChange: value => setMessage(value),\n      onKeyPress: key => key === 'Enter' ? onSend() : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Messages, \"vTGO0RG1igPseaS2tDjtEsGdHss=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/All Project Folder/TEMFOLDER/GITHUB-DHRUV_SCIFOR/PROJECT Folder/MAJOR PROJECT/chatapplication/client/src/components/messages/index.tsx"],"names":["useLayoutEffect","useRef","TextField","Message","Messages","name","dark","onSend","message","messages","setMessage","messagesRef","current","elem","scrollTop","scrollHeight","map","text","timestamp","user","index","sendDarkIcon","sendIcon","value","key"],"mappings":";;;AAAA,SAASA,eAAT,EAA0BC,MAA1B,QAAwC,OAAxC;AAEA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,cAAP;;;;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,IADgB;AAEhBC,EAAAA,IAFgB;AAGhBC,EAAAA,MAHgB;AAIhBC,EAAAA,OAJgB;AAKhBC,EAAAA,QALgB;AAMhBC,EAAAA;AANgB,CAAD,KAON;AAAA;;AACT,QAAMC,WAAgB,GAAGV,MAAM,CAAC,IAAD,CAA/B;AAEAD,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAIW,WAAW,CAACC,OAAhB,EAAyB;AACvB,YAAMC,IAAS,GAAGF,WAAW,CAACC,OAA9B;AACAC,MAAAA,IAAI,CAACC,SAAL,GAAiBD,IAAI,CAACE,YAAtB;AACD;AACF,GALc,EAKZ,CAACN,QAAD,CALY,CAAf;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEE,WAAV;AAAuB,MAAA,SAAS,EAAC,qBAAjC;AAAA,gBACGF,QAAQ,CAACO,GAAT,CAAa,CAAC;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,SAAR;AAAmBC,QAAAA;AAAnB,OAAD,EAAiCC,KAAjC,kBACZ,QAAC,OAAD;AAEE,QAAA,IAAI,EAAED,IAFR;AAGE,QAAA,IAAI,EAAEF,IAHR;AAIE,QAAA,IAAI,EAAEZ,IAJR;AAKE,QAAA,SAAS,EAAEa;AALb,SACOE,KADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,SAAD;AACE,MAAA,KAAK,EAAEZ,OADT;AAEE,MAAA,WAAW,EAAE,MAAMD,MAAM,EAF3B;AAGE,MAAA,WAAW,EAAC,wBAHd;AAIE,MAAA,IAAI,EAAED,IAAI,GAAGe,YAAH,GAAkBC,QAJ9B;AAKE,MAAA,QAAQ,EAAGC,KAAD,IAAmBb,UAAU,CAACa,KAAD,CALzC;AAME,MAAA,UAAU,EAAGC,GAAD,IAAkBA,GAAG,KAAK,OAAR,GAAkBjB,MAAM,EAAxB,GAA6B;AAN7D;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzCD;;GAAMH,Q;;KAAAA,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import { useLayoutEffect, useRef } from 'react'\r\n\r\nimport TextField from '../text-field'\r\nimport Message from '../message'\r\n\r\nimport './styles.css'\r\n\r\nimport sendIcon from '../../assets/send.svg'\r\nimport sendDarkIcon from '../../assets/send-dark.svg'\r\n\r\nconst Messages = ({\r\n  name,\r\n  dark,\r\n  onSend,\r\n  message,\r\n  messages,\r\n  setMessage,\r\n}: any) => {\r\n  const messagesRef: any = useRef(null)\r\n\r\n  useLayoutEffect(() => {\r\n    if (messagesRef.current) {\r\n      const elem: any = messagesRef.current\r\n      elem.scrollTop = elem.scrollHeight\r\n    }\r\n  }, [messages])\r\n\r\n  return (\r\n    <div className=\"messages__wrapper\">\r\n      <div ref={messagesRef} className=\"messages__container\">\r\n        {messages.map(({ text, timestamp, user }: any, index: number) => (\r\n          <Message\r\n            key={index}\r\n            user={user}\r\n            text={text}\r\n            name={name}\r\n            timestamp={timestamp}\r\n          />\r\n        ))}\r\n        {/* {JSON.stringify(messages.reverse())} */}\r\n      </div>\r\n      <TextField\r\n        value={message}\r\n        onIconClick={() => onSend()}\r\n        placeholder=\"Type a message here...\"\r\n        icon={dark ? sendDarkIcon : sendIcon}\r\n        onChange={(value: string) => setMessage(value)}\r\n        onKeyPress={(key: string) => (key === 'Enter' ? onSend() : null)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Messages\r\n"]},"metadata":{},"sourceType":"module"}